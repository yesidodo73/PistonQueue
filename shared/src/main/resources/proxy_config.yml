# PistonQueue V${version}
# Make the target server the default one you log in to
# READ ME: all colours are orange by default just add & and colour
# to change the colours to your liking
# Please don't forget to replace SERVERNAME

# MOTD support has been moved to a PistonMOTD (https://www.spigotmc.org/resources/80567/) placeholder addon.
# If both PistonQueue and PistonMOTD are installed on your proxy, the following placeholders will be available in the PistonMOTD config:
# %pistonqueue_regular%, %pistonqueue_priority%, %pistonqueue_veteran%

# Placeholder for %server_name%
SERVER_NAME: "&cexample.org"

# Username regex
ENABLE_USERNAME_REGEX: true
USERNAME_REGEX: "[a-zA-Z0-9_]*"
USERNAME_REGEX_MESSAGE: "&6[PQ] Invalid username please use: %regex%"

# Tab auto completion
REGISTER_TAB: true

# Server is full message
SERVER_IS_FULL_MESSAGE: "%server_name% &6is full"

# It is not recommended decreasing this number (milliseconds)
SERVER_ONLINE_CHECK_DELAY: 500

# Where to send the queue position message and what to send.
POSITION_MESSAGE_CHAT: true
POSITION_MESSAGE_HOT_BAR: false
POSITION_MESSAGE_TITLE: false
QUEUE_POSITION: "&6Position in queue: &l%position%"
QUEUE_POSITION_TITLE: "&6Position in queue: &e&l%position%"
POSITION_MESSAGE_DELAY: 10000

# Whether to show a custom player list header and footer (tab) with the queue position.
POSITION_PLAYER_LIST: true

# This is a message to hide the actual reason of why you are getting kicked from the server.
ENABLE_KICK_MESSAGE: false
KICK_MESSAGE: "&6You have lost connection to the server"

# Failure protection for the queue
PAUSE_QUEUE_IF_TARGET_DOWN: true
PAUSE_QUEUE_IF_TARGET_DOWN_MESSAGE: "&6The main server is down. We will be back soon!"

# When the servers are down should we prevent new players from joining the proxy?
KICK_WHEN_DOWN: false
SERVER_DOWN_KICK_MESSAGE: "%server_name% &6is down please try again later :("

# %TARGET_SERVER%, %QUEUE_SERVER% and %SOURCE_SERVER% are placeholders for the server names
KICK_WHEN_DOWN_SERVERS:
  - "%TARGET_SERVER%"
  - "%QUEUE_SERVER%"
  # - "%SOURCE_SERVER%"
  # - "other-server"

# If a player gets kicked from the target server (it goes down/crashes), he gets sent into queue and waits.
IF_TARGET_DOWN_SEND_TO_QUEUE: true
IF_TARGET_DOWN_SEND_TO_QUEUE_MESSAGE: "&cThe target server is offline now! You have been sent to queue while it goes back online."

# Only send players back to queue if the kick message has these words. (lowercase)
DOWN_WORD_LIST:
  - "restarting"
  - "closed"
  - "went down"
  - "unknown reason" # This is the default message when no message is sent.

# If something went wrong while queue -> target happens should the player be sent back into queue?
RECOVERY: true
RECOVERY_MESSAGE: "&cOops something went wrong... Putting you back in queue."

# Set the queue servers name that is in the proxy config file.
# Note that the target server is always the one you log in to first.
# The target server is the one that has a queue to protect it.
# Make sure you set the default server in proxy config correctly.
QUEUE_SERVER: "queue"
TARGET_SERVER: "main"

FORCE_TARGET_SERVER: false

# Set this to true if you're a lobby or cracked/offline mode server.
# This option is required for those setups to work. Make your proxy sends source -> target.
# PistonQueue will redirect the player with source -> queue automatically if target is full.
# The player will be sent to the original target server after the queue.
ENABLE_SOURCE_SERVER: false
SOURCE_SERVER: "lobby"

# Connecting to server message
JOINING_TARGET_SERVER: "&6Connecting to the server..."

# Total people allowed to be connected to the queue network
# Make sure you set the BungeeCord/Velocity slots higher than the amount
# of people you get regularly for example 9000 and 9000 on the queue server
QUEUE_SERVER_SLOTS: 9000

# Queue move delay in milliseconds default is 1000ms
# please note this only guaranteed to not have issues 1000ms and higher
QUEUE_MOVE_DELAY: 1000

# Max players allowed to be moved into the target server at once with one queue move.
MAX_PLAYERS_PER_MOVE: 10

# Minimum queue time: force players to wait in queue for at least this many seconds
# even if the queue is empty. Set to 0 to disable.
MINIMUM_QUEUE_TIME_ENABLED: false
MINIMUM_QUEUE_TIME_SECONDS: 5

# Should the queue be always active or only when the target server is full?
# When activated you will always be sent into the queue server and then the target server.
ALWAYS_QUEUE: false

# Send an XP sound to every player who gets to position 5 or below in the queue
SEND_XP_SOUND: true

# The way shadow-bans should work on your server. Valid types are: LOOP, TEN_PERCENT
# LOOP: When reaching the end of the queue you will get put in front of it again.
# PERCENT: Loop, but you have a custom chance of getting in.
# KICK: You will be kicked from the queue server on joining it.
SHADOW_BAN_TYPE: "LOOP"

# Custom percentage for the shadow-ban type. Only used when SHADOW_BAN_TYPE is set to PERCENT.
PERCENT: 10

# LOOP: When you're shadow-banned you will be put in queue, but before joining it "fails" and you start all over again.
SHADOW_BAN_MESSAGE: "&6You have lost connection to the server"

# Permissions
QUEUE_BYPASS_PERMISSION: "queue.bypass"
ADMIN_PERMISSION: "queue.admin"

# Adding or removing queue types requires a full restart!!!
# The order number is checked from first to last.
QUEUE_TYPES:
  REGULAR:
    ORDER: 3
    # Max players of this type allowed on the target server
    SLOTS: 50
    # Special permission for the default queue type
    PERMISSION: "default"
    # Queue server tab list configuration use %position% to show the current position of the player
    # and use %wait% to show the estimated wait time of the player (not very accurate yet)
    # this only shows when your in the queue waiting to join use a separate plugin for your target server
    HEADER:
      - ""
      - " %server_name% "
      - ""
      - " %server_name% &bis full "
      - " Position in queue: &l%position% "
      - " &6Estimated time: &l%wait% "
      - ""
    FOOTER:
      - ""
      - " &6You can now donate to receive priority queue status, please visit donate.example.com "
      - ""
      - " &7contact: contact@example.com "
      - " discussion: https://discord.example.com "
      - " website: https://www.example.com "
      - " These are the only official %server_name% websites and contacts "
      - ""
  PRIORITY:
    ORDER: 2
    SLOTS: 30
    PERMISSION: "queue.priority"
    # Configs for priority queue tab list
    HEADER:
      - ""
      - " %server_name%"
      - ""
      - " %server_name% &bis full "
      - " Position in queue: &l%position% "
      - " &6Estimated time: &l%wait% "
      - ""
    FOOTER:
      - ""
      - " &6You have priority queue status please wait for an available slot on the server "
      - ""
      - " &7contact: contact@example.com "
      - " discussion: https://discord.example.com "
      - " website: https://www.example.com "
      - " These are the only official %server_name% websites and contacts "
      - ""
  VETERAN:
    ORDER: 1
    SLOTS: 20
    PERMISSION: "queue.veteran"
    # Configs for veteran queue tab list
    HEADER:
      - ""
      - " %server_name% "
      - ""
      - " %server_name% &bis full "
      - " Position in queue: &l%position% "
      - " &6Estimated time: &l%wait% "
      - ""
    FOOTER:
      - ""
      - " &6You have veteran queue status please wait for an available slot on the server "
      - ""
      - " &7contact: contact@example.com "
      - " discussion: https://discord.example.com "
      - " website: https://www.example.com "
      - " These are the only official %server_name% websites and contacts "
      - ""

# ===============================================
# Advanced: Multi-endpoint lobby groups (Optional)
# ===============================================
# This feature lets you distribute players across multiple proxies or external nodes.
# Each lobby group defines a set of endpoints with a selection strategy.
#
# Basic flow:
# - When enabled, instead of connecting to TARGET_SERVER directly, the plugin selects an endpoint
#   from the specified lobby group using: lowest priority -> weighted pick -> tie-breaker.
# - Endpoints can be one of two modes:
#   VELOCITY: connect by proxy server name (registered in your proxy config)
#   TRANSFER: instruct the client to connect to an external host:port directly (requires 1.20.5+)
#
# Notes:
# - This does NOT disable any of the queue mechanics; it only changes where players are sent after the queue.
# - TRANSFER requires modern clients. Use TRANSFER_MIN_PROTOCOL to guard old clients; they will fall back to proxy connect.
# - For TRANSFER endpoints, player counts are estimated based on recent transfers (best-effort). VELOCITY endpoints
#   use the actual proxy player list.

# Turn on lobby groups. When false, the plugin behaves like before (uses TARGET_SERVER).
USE_TARGET_LOBBY_GROUP: false

# Which lobby group to use when the feature is enabled.
TARGET_LOBBY_GROUP: "MAIN_LOBBY"

# Minimum protocol ID required to use TRANSFER (clients below this value will use proxy connect fallback).
# 765 is Minecraft 1.20.5+. Set 0 to disable the check.
TRANSFER_MIN_PROTOCOL: 765

# Define one or more lobby groups.
LOBBY_GROUPS:
  MAIN_LOBBY:
    # Endpoints in this group. Each endpoint can be VELOCITY or TRANSFER.
    endpoints:
      # Example: a normal Velocity-registered server
      - name: "vel-1"
        mode: "VELOCITY"        # VELOCITY | TRANSFER
        priority: 1              # Lower number = higher priority. Only the lowest priority endpoints are considered.
        weight: 10               # Weighted random among same-priority endpoints. Higher = more likely.
        velocityServer: "main"   # Proxy server name (as in your proxy's config)

      # Example: an external proxy/node reachable from the internet
      - name: "ext-1"
        mode: "TRANSFER"
        priority: 1
        weight: 10
        host: "node1.example.com"
        port: 25565

    # Selection options for this group
    selection:
      # Tie-breaker when priority and weight produce a tie: LEAST_PLAYERS | NONE
      tieBreaker: "LEAST_PLAYERS"

      # Where to get player counts for selection and tie-breaking:
      # AUTO: VELOCITY uses proxy player list; TRANSFER tries status ping (fallback to recent transfers)
      # STATUS_PING: Always try status ping; on failure falls back to recent transfers
      # RECENT_TRANSFER: Use only recent transfer counts (fast but approximate)
      playerCountSource: "AUTO"

      # Transport override:
      # PER_ENDPOINT: Use each endpoint's own mode (VELOCITY or TRANSFER)
      # FORCE_VELOCITY: Force all endpoints to use proxy connect (requires velocityServer on endpoints)
      # FORCE_TRANSFER: Force all endpoints to use packet transfer (requires host/port on endpoints)
      transportOverride: "PER_ENDPOINT"

      # Behavior when a transfer is unsupported or fails:
      # PROXY_CONNECT: Fallback to proxy connect (default)
      # ABORT: Abort and keep player in queue (they remain in queue and will be retried on next cycle)
      fallbackOnTransferFail: "PROXY_CONNECT"

      # Timeouts/caches
      pingTimeoutMs: 750            # Timeout for online checks/status ping
      cacheTtlMs: 2000              # TTL (ms) for recent-transfer load estimates on TRANSFER endpoints
